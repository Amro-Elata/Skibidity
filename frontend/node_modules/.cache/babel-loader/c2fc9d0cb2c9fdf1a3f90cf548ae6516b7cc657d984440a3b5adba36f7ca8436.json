{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Skibidity\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { sendMessage, fetchMessages } from '../utils/api';\n\n// Purpose: Chat functionality for the app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        const fetchedMessages = await fetchMessages();\n        setMessages(fetchedMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    loadMessages();\n  }, []);\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    try {\n      await sendMessage(message);\n      const updatedMessages = await fetchMessages();\n      setMessages(updatedMessages);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"9iyGj6dRHK6V1mxAAjlNUec9m4A=\");\n_c = Chat;\nexport default Chat;\n\n// To develop further: Add real-time updates using WebSocket, typing indicators, and user mentions.\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","sendMessage","fetchMessages","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","message","setMessage","loadMessages","fetchedMessages","error","console","handleSend","trim","updatedMessages","children","map","msg","idx","content","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Skibidity/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { sendMessage, fetchMessages } from '../utils/api';\r\n\r\n// Purpose: Chat functionality for the app\r\nconst Chat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadMessages = async () => {\r\n            try {\r\n                const fetchedMessages = await fetchMessages();\r\n                setMessages(fetchedMessages);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n        loadMessages();\r\n    }, []);\r\n\r\n    const handleSend = async () => {\r\n        if (!message.trim()) return;\r\n        try {\r\n            await sendMessage(message);\r\n            const updatedMessages = await fetchMessages();\r\n            setMessages(updatedMessages);\r\n            setMessage('');\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}>{msg.content}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message\"\r\n            />\r\n            <button onClick={handleSend}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n\r\n// To develop further: Add real-time updates using WebSocket, typing indicators, and user mentions.\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,aAAa,QAAQ,cAAc;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,eAAe,GAAG,MAAMV,aAAa,CAAC,CAAC;QAC7CM,WAAW,CAACI,eAAe,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDF,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,EAAE;IACrB,IAAI;MACA,MAAMf,WAAW,CAACQ,OAAO,CAAC;MAC1B,MAAMQ,eAAe,GAAG,MAAMf,aAAa,CAAC,CAAC;MAC7CM,WAAW,CAACS,eAAe,CAAC;MAC5BP,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EACKX,QAAQ,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACnBjB,OAAA;QAAAc,QAAA,EAAgBE,GAAG,CAACE;MAAO,GAAjBD,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA;MACIuB,KAAK,EAAElB,OAAQ;MACfmB,QAAQ,EAAGC,CAAC,IAAKnB,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFtB,OAAA;MAAQ4B,OAAO,EAAEjB,UAAW;MAAAG,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAACpB,EAAA,CA3CID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA6CV,eAAeA,IAAI;;AAEnB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}